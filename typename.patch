diff -up llvm-12.0.1.src/test/Other/new-pass-manager.ll~ llvm-12.0.1.src/test/Other/new-pass-manager.ll
--- a/llvm-12.0.1.src/test/Other/new-pass-manager.ll~	2021-06-29 00:23:38.000000000 +0800
+++ b/llvm-12.0.1.src/test/Other/new-pass-manager.ll	2023-02-01 00:21:20.571101342 +0800
@@ -8,9 +8,9 @@
 ; RUN: opt -disable-output -disable-verify -debug-pass-manager \
 ; RUN:     -passes=no-op-module %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-MODULE-PASS
-; CHECK-MODULE-PASS: Starting llvm::Module pass manager run
+; CHECK-MODULE-PASS: Starting Module pass manager run
 ; CHECK-MODULE-PASS-NEXT: Running pass: NoOpModulePass
-; CHECK-MODULE-PASS-NEXT: Finished llvm::Module pass manager run
+; CHECK-MODULE-PASS-NEXT: Finished Module pass manager run
 
 ; RUN: opt -disable-output -disable-verify -debug-pass-manager \
 ; RUN:     -passes=no-op-cgscc %s 2>&1 \
@@ -18,7 +18,7 @@
 ; RUN: opt -disable-output -disable-verify -debug-pass-manager \
 ; RUN:     -passes='cgscc(no-op-cgscc)' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-CGSCC-PASS
-; CHECK-CGSCC-PASS: Starting llvm::Module pass manager run
+; CHECK-CGSCC-PASS: Starting Module pass manager run
 ; CHECK-CGSCC-PASS-NEXT: Running analysis: InnerAnalysisManagerProxy<{{.*(CGSCCAnalysisManager|AnalysisManager<.*LazyCallGraph::SCC.*>).*}},{{.*}}Module>
 ; CHECK-CGSCC-PASS-NEXT: Running analysis: InnerAnalysisManagerProxy<{{.*(FunctionAnalysisManager|AnalysisManager<.*Function.*>).*}},{{.*}}Module>
 ; CHECK-CGSCC-PASS-NEXT: Running analysis: LazyCallGraphAnalysis
@@ -28,7 +28,7 @@
 ; CHECK-CGSCC-PASS-NEXT: Starting CGSCC pass manager run
 ; CHECK-CGSCC-PASS-NEXT: Running pass: NoOpCGSCCPass
 ; CHECK-CGSCC-PASS-NEXT: Finished CGSCC pass manager run
-; CHECK-CGSCC-PASS-NEXT: Finished llvm::Module pass manager run
+; CHECK-CGSCC-PASS-NEXT: Finished Module pass manager run
 
 ; RUN: opt -disable-output -disable-verify -debug-pass-manager \
 ; RUN:     -passes=no-op-function %s 2>&1 \
@@ -36,35 +36,35 @@
 ; RUN: opt -disable-output -disable-verify -debug-pass-manager \
 ; RUN:     -passes='function(no-op-function)' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-FUNCTION-PASS
-; CHECK-FUNCTION-PASS: Starting llvm::Module pass manager run
+; CHECK-FUNCTION-PASS: Starting Module pass manager run
 ; CHECK-FUNCTION-PASS-NEXT: Running analysis: InnerAnalysisManagerProxy<{{.*}}>
 ; CHECK-FUNCTION-PASS-NEXT: Starting llvm::Function pass manager run
 ; CHECK-FUNCTION-PASS-NEXT: Running pass: NoOpFunctionPass
 ; CHECK-FUNCTION-PASS-NEXT: Finished llvm::Function pass manager run
-; CHECK-FUNCTION-PASS-NEXT: Finished llvm::Module pass manager run
+; CHECK-FUNCTION-PASS-NEXT: Finished Module pass manager run
 
 ; RUN: opt -disable-output -debug-pass-manager -passes=print %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-MODULE-PRINT
-; CHECK-MODULE-PRINT: Starting llvm::Module pass manager run
+; CHECK-MODULE-PRINT: Starting Module pass manager run
 ; CHECK-MODULE-PRINT: Running pass: VerifierPass
 ; CHECK-MODULE-PRINT: Running pass: PrintModulePass
 ; CHECK-MODULE-PRINT: ModuleID
 ; CHECK-MODULE-PRINT: define void @foo(i1 %x, i8* %p1, i8* %p2)
 ; CHECK-MODULE-PRINT: Running pass: VerifierPass
-; CHECK-MODULE-PRINT: Finished llvm::Module pass manager run
+; CHECK-MODULE-PRINT: Finished Module pass manager run
 
 ; RUN: opt -disable-output -debug-pass-manager -disable-verify -passes='print,verify' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-MODULE-VERIFY
-; CHECK-MODULE-VERIFY: Starting llvm::Module pass manager run
+; CHECK-MODULE-VERIFY: Starting Module pass manager run
 ; CHECK-MODULE-VERIFY: Running pass: PrintModulePass
 ; CHECK-MODULE-VERIFY: ModuleID
 ; CHECK-MODULE-VERIFY: define void @foo(i1 %x, i8* %p1, i8* %p2)
 ; CHECK-MODULE-VERIFY: Running pass: VerifierPass
-; CHECK-MODULE-VERIFY: Finished llvm::Module pass manager run
+; CHECK-MODULE-VERIFY: Finished Module pass manager run
 
 ; RUN: opt -disable-output -debug-pass-manager -passes='function(print)' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-FUNCTION-PRINT
-; CHECK-FUNCTION-PRINT: Starting llvm::Module pass manager run
+; CHECK-FUNCTION-PRINT: Starting Module pass manager run
 ; CHECK-FUNCTION-PRINT: Running pass: VerifierPass
 ; CHECK-FUNCTION-PRINT: Running analysis: InnerAnalysisManagerProxy<{{.*}}>
 ; CHECK-FUNCTION-PRINT: Starting llvm::Function pass manager run
@@ -73,18 +73,18 @@
 ; CHECK-FUNCTION-PRINT: define void @foo(i1 %x, i8* %p1, i8* %p2)
 ; CHECK-FUNCTION-PRINT: Finished llvm::Function pass manager run
 ; CHECK-FUNCTION-PRINT: Running pass: VerifierPass
-; CHECK-FUNCTION-PRINT: Finished llvm::Module pass manager run
+; CHECK-FUNCTION-PRINT: Finished Module pass manager run
 
 ; RUN: opt -disable-output -debug-pass-manager -disable-verify -passes='function(print,verify)' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-FUNCTION-VERIFY
-; CHECK-FUNCTION-VERIFY: Starting llvm::Module pass manager run
+; CHECK-FUNCTION-VERIFY: Starting Module pass manager run
 ; CHECK-FUNCTION-VERIFY: Starting llvm::Function pass manager run
 ; CHECK-FUNCTION-VERIFY: Running pass: PrintFunctionPass
 ; CHECK-FUNCTION-VERIFY-NOT: ModuleID
 ; CHECK-FUNCTION-VERIFY: define void @foo(i1 %x, i8* %p1, i8* %p2)
 ; CHECK-FUNCTION-VERIFY: Running pass: VerifierPass
 ; CHECK-FUNCTION-VERIFY: Finished llvm::Function pass manager run
-; CHECK-FUNCTION-VERIFY: Finished llvm::Module pass manager run
+; CHECK-FUNCTION-VERIFY: Finished Module pass manager run
 
 ; RUN: opt -S -o - -passes='no-op-module,no-op-module' %s \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-NOOP
@@ -106,7 +106,7 @@
 
 ; RUN: opt -disable-output -debug-pass-manager -disable-verify -passes='no-op-module,function(no-op-function)' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-NO-VERIFY
-; CHECK-NO-VERIFY: Starting llvm::Module pass manager run
+; CHECK-NO-VERIFY: Starting Module pass manager run
 ; CHECK-NO-VERIFY-NOT: VerifierPass
 ; CHECK-NO-VERIFY: Running pass: NoOpModulePass
 ; CHECK-NO-VERIFY-NOT: VerifierPass
@@ -115,12 +115,12 @@
 ; CHECK-NO-VERIFY-NOT: VerifierPass
 ; CHECK-NO-VERIFY: Finished llvm::Function pass manager run
 ; CHECK-NO-VERIFY-NOT: VerifierPass
-; CHECK-NO-VERIFY: Finished llvm::Module pass manager run
+; CHECK-NO-VERIFY: Finished Module pass manager run
 
 ; RUN: opt -disable-output -debug-pass-manager \
 ; RUN:     -passes='require<no-op-module>,cgscc(require<no-op-cgscc>,function(require<no-op-function>))' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-ANALYSES
-; CHECK-ANALYSES: Starting llvm::Module pass manager run
+; CHECK-ANALYSES: Starting Module pass manager run
 ; CHECK-ANALYSES: Running pass: RequireAnalysisPass
 ; CHECK-ANALYSES: Running analysis: NoOpModuleAnalysis
 ; CHECK-ANALYSES: Starting CGSCC pass manager run
@@ -135,12 +135,12 @@
 ; RUN: opt -disable-output -debug-pass-manager \
 ; RUN:     -passes='require<no-op-module>,cgscc(require<no-op-cgscc>,function(require<no-op-function>))' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-NO-OP-INVALIDATION
-; CHECK-NO-OP-INVALIDATION: Starting llvm::Module pass manager run
+; CHECK-NO-OP-INVALIDATION: Starting Module pass manager run
 
 ; RUN: opt -disable-output -debug-pass-manager \
 ; RUN:     -passes='require<no-op-module>,require<no-op-module>,require<no-op-module>' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-DO-CACHE-MODULE-ANALYSIS-RESULTS
-; CHECK-DO-CACHE-MODULE-ANALYSIS-RESULTS: Starting llvm::Module pass manager run
+; CHECK-DO-CACHE-MODULE-ANALYSIS-RESULTS: Starting Module pass manager run
 ; CHECK-DO-CACHE-MODULE-ANALYSIS-RESULTS: Running pass: RequireAnalysisPass
 ; CHECK-DO-CACHE-MODULE-ANALYSIS-RESULTS: Running analysis: NoOpModuleAnalysis
 ; CHECK-DO-CACHE-MODULE-ANALYSIS-RESULTS-NOT: Running analysis: NoOpModuleAnalysis
@@ -148,7 +148,7 @@
 ; RUN: opt -disable-output -debug-pass-manager \
 ; RUN:     -passes='require<no-op-module>,invalidate<no-op-module>,require<no-op-module>' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-DO-INVALIDATE-MODULE-ANALYSIS-RESULTS
-; CHECK-DO-INVALIDATE-MODULE-ANALYSIS-RESULTS: Starting llvm::Module pass manager run
+; CHECK-DO-INVALIDATE-MODULE-ANALYSIS-RESULTS: Starting Module pass manager run
 ; CHECK-DO-INVALIDATE-MODULE-ANALYSIS-RESULTS: Running pass: RequireAnalysisPass
 ; CHECK-DO-INVALIDATE-MODULE-ANALYSIS-RESULTS: Running analysis: NoOpModuleAnalysis
 ; CHECK-DO-INVALIDATE-MODULE-ANALYSIS-RESULTS: Invalidating analysis: NoOpModuleAnalysis
@@ -157,7 +157,7 @@
 ; RUN: opt -disable-output -debug-pass-manager \
 ; RUN:     -passes='cgscc(require<no-op-cgscc>,require<no-op-cgscc>,require<no-op-cgscc>)' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-DO-CACHE-CGSCC-ANALYSIS-RESULTS
-; CHECK-DO-CACHE-CGSCC-ANALYSIS-RESULTS: Starting llvm::Module pass manager run
+; CHECK-DO-CACHE-CGSCC-ANALYSIS-RESULTS: Starting Module pass manager run
 ; CHECK-DO-CACHE-CGSCC-ANALYSIS-RESULTS: Running pass: RequireAnalysisPass
 ; CHECK-DO-CACHE-CGSCC-ANALYSIS-RESULTS: Running analysis: NoOpCGSCCAnalysis
 ; CHECK-DO-CACHE-CGSCC-ANALYSIS-RESULTS-NOT: Running analysis: NoOpCGSCCAnalysis
@@ -165,7 +165,7 @@
 ; RUN: opt -disable-output -debug-pass-manager \
 ; RUN:     -passes='cgscc(require<no-op-cgscc>,invalidate<no-op-cgscc>,require<no-op-cgscc>)' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-DO-INVALIDATE-CGSCC-ANALYSIS-RESULTS
-; CHECK-DO-INVALIDATE-CGSCC-ANALYSIS-RESULTS: Starting llvm::Module pass manager run
+; CHECK-DO-INVALIDATE-CGSCC-ANALYSIS-RESULTS: Starting Module pass manager run
 ; CHECK-DO-INVALIDATE-CGSCC-ANALYSIS-RESULTS: Running pass: RequireAnalysisPass
 ; CHECK-DO-INVALIDATE-CGSCC-ANALYSIS-RESULTS: Running analysis: NoOpCGSCCAnalysis
 ; CHECK-DO-INVALIDATE-CGSCC-ANALYSIS-RESULTS: Invalidating analysis: NoOpCGSCCAnalysis
@@ -174,7 +174,7 @@
 ; RUN: opt -disable-output -debug-pass-manager \
 ; RUN:     -passes='function(require<no-op-function>,require<no-op-function>,require<no-op-function>)' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-DO-CACHE-FUNCTION-ANALYSIS-RESULTS
-; CHECK-DO-CACHE-FUNCTION-ANALYSIS-RESULTS: Starting llvm::Module pass manager run
+; CHECK-DO-CACHE-FUNCTION-ANALYSIS-RESULTS: Starting Module pass manager run
 ; CHECK-DO-CACHE-FUNCTION-ANALYSIS-RESULTS: Running pass: RequireAnalysisPass
 ; CHECK-DO-CACHE-FUNCTION-ANALYSIS-RESULTS: Running analysis: NoOpFunctionAnalysis
 ; CHECK-DO-CACHE-FUNCTION-ANALYSIS-RESULTS-NOT: Running analysis: NoOpFunctionAnalysis
@@ -182,7 +182,7 @@
 ; RUN: opt -disable-output -debug-pass-manager \
 ; RUN:     -passes='function(require<no-op-function>,invalidate<no-op-function>,require<no-op-function>)' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-DO-INVALIDATE-FUNCTION-ANALYSIS-RESULTS
-; CHECK-DO-INVALIDATE-FUNCTION-ANALYSIS-RESULTS: Starting llvm::Module pass manager run
+; CHECK-DO-INVALIDATE-FUNCTION-ANALYSIS-RESULTS: Starting Module pass manager run
 ; CHECK-DO-INVALIDATE-FUNCTION-ANALYSIS-RESULTS: Running pass: RequireAnalysisPass
 ; CHECK-DO-INVALIDATE-FUNCTION-ANALYSIS-RESULTS: Running analysis: NoOpFunctionAnalysis
 ; CHECK-DO-INVALIDATE-FUNCTION-ANALYSIS-RESULTS: Invalidating analysis: NoOpFunctionAnalysis
@@ -191,7 +191,7 @@
 ; RUN: opt -disable-output -disable-verify -debug-pass-manager \
 ; RUN:     -passes='require<no-op-module>,module(require<no-op-module>,function(require<no-op-function>,invalidate<all>,require<no-op-function>),require<no-op-module>),require<no-op-module>' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-INVALIDATE-ALL
-; CHECK-INVALIDATE-ALL: Starting llvm::Module pass manager run
+; CHECK-INVALIDATE-ALL: Starting Module pass manager run
 ; CHECK-INVALIDATE-ALL: Running pass: RequireAnalysisPass
 ; CHECK-INVALIDATE-ALL: Running analysis: NoOpModuleAnalysis
 ; CHECK-INVALIDATE-ALL: Running pass: RequireAnalysisPass
@@ -210,12 +210,12 @@
 ; CHECK-INVALIDATE-ALL-NOT: Invalidating analysis: NoOpModuleAnalysis
 ; CHECK-INVALIDATE-ALL: Running pass: RequireAnalysisPass
 ; CHECK-INVALIDATE-ALL-NOT: Running analysis: NoOpModuleAnalysis
-; CHECK-INVALIDATE-ALL: Finished llvm::Module pass manager run
+; CHECK-INVALIDATE-ALL: Finished Module pass manager run
 
 ; RUN: opt -disable-output -disable-verify -debug-pass-manager \
 ; RUN:     -passes='require<no-op-module>,module(require<no-op-module>,cgscc(require<no-op-cgscc>,function(require<no-op-function>,invalidate<all>,require<no-op-function>),require<no-op-cgscc>),require<no-op-module>),require<no-op-module>' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-INVALIDATE-ALL-CG
-; CHECK-INVALIDATE-ALL-CG: Starting llvm::Module pass manager run
+; CHECK-INVALIDATE-ALL-CG: Starting Module pass manager run
 ; CHECK-INVALIDATE-ALL-CG: Running pass: RequireAnalysisPass
 ; CHECK-INVALIDATE-ALL-CG: Running analysis: NoOpModuleAnalysis
 ; CHECK-INVALIDATE-ALL-CG: Running pass: RequireAnalysisPass
@@ -243,67 +243,67 @@
 ; CHECK-INVALIDATE-ALL-CG-NOT: Invalidating analysis: NoOpModuleAnalysis
 ; CHECK-INVALIDATE-ALL-CG: Running pass: RequireAnalysisPass
 ; CHECK-INVALIDATE-ALL-CG-NOT: Running analysis: NoOpModuleAnalysis
-; CHECK-INVALIDATE-ALL-CG: Finished llvm::Module pass manager run
+; CHECK-INVALIDATE-ALL-CG: Finished Module pass manager run
 
 ; RUN: opt -disable-output -disable-verify -debug-pass-manager %s 2>&1 \
 ; RUN:     -passes='require<targetlibinfo>,invalidate<all>,require<targetlibinfo>' \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-TLI
-; CHECK-TLI: Starting llvm::Module pass manager run
+; CHECK-TLI: Starting Module pass manager run
 ; CHECK-TLI: Running pass: RequireAnalysisPass
 ; CHECK-TLI: Running analysis: TargetLibraryAnalysis
 ; CHECK-TLI: Running pass: InvalidateAllAnalysesPass
 ; CHECK-TLI-NOT: Invalidating analysis: TargetLibraryAnalysis
 ; CHECK-TLI: Running pass: RequireAnalysisPass
 ; CHECK-TLI-NOT: Running analysis: TargetLibraryAnalysis
-; CHECK-TLI: Finished llvm::Module pass manager run
+; CHECK-TLI: Finished Module pass manager run
 
 ; RUN: opt -disable-output -disable-verify -debug-pass-manager %s 2>&1 \
 ; RUN:     -passes='require<targetir>,invalidate<all>,require<targetir>' \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-TIRA
-; CHECK-TIRA: Starting llvm::Module pass manager run
+; CHECK-TIRA: Starting Module pass manager run
 ; CHECK-TIRA: Running pass: RequireAnalysisPass
 ; CHECK-TIRA: Running analysis: TargetIRAnalysis
 ; CHECK-TIRA: Running pass: InvalidateAllAnalysesPass
 ; CHECK-TIRA-NOT: Invalidating analysis: TargetIRAnalysis
 ; CHECK-TIRA: Running pass: RequireAnalysisPass
 ; CHECK-TIRA-NOT: Running analysis: TargetIRAnalysis
-; CHECK-TIRA: Finished llvm::Module pass manager run
+; CHECK-TIRA: Finished Module pass manager run
 
 ; RUN: opt -disable-output -disable-verify -debug-pass-manager %s 2>&1 \
 ; RUN:     -passes='require<domtree>' \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-DT
-; CHECK-DT: Starting llvm::Module pass manager run
+; CHECK-DT: Starting Module pass manager run
 ; CHECK-DT: Running pass: RequireAnalysisPass
 ; CHECK-DT: Running analysis: DominatorTreeAnalysis
-; CHECK-DT: Finished llvm::Module pass manager run
+; CHECK-DT: Finished Module pass manager run
 
 ; RUN: opt -disable-output -disable-verify -debug-pass-manager %s 2>&1 \
 ; RUN:     -passes='require<basic-aa>' \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-BASIC-AA
-; CHECK-BASIC-AA: Starting llvm::Module pass manager run
+; CHECK-BASIC-AA: Starting Module pass manager run
 ; CHECK-BASIC-AA: Running pass: RequireAnalysisPass
 ; CHECK-BASIC-AA: Running analysis: BasicAA
-; CHECK-BASIC-AA: Finished llvm::Module pass manager run
+; CHECK-BASIC-AA: Finished Module pass manager run
 
 ; RUN: opt -disable-output -disable-verify -debug-pass-manager %s 2>&1 \
 ; RUN:     -passes='require<aa>' -aa-pipeline='basic-aa' \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-AA
-; CHECK-AA: Starting llvm::Module pass manager run
+; CHECK-AA: Starting Module pass manager run
 ; CHECK-AA: Running pass: RequireAnalysisPass
 ; CHECK-AA: Running analysis: AAManager
 ; CHECK-AA: Running analysis: BasicAA
-; CHECK-AA: Finished llvm::Module pass manager run
+; CHECK-AA: Finished Module pass manager run
 
 ; RUN: opt -disable-output -disable-verify -debug-pass-manager %s 2>&1 \
 ; RUN:     -passes='require<aa>' -aa-pipeline='default' \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-AA-DEFAULT
-; CHECK-AA-DEFAULT: Starting llvm::Module pass manager run
+; CHECK-AA-DEFAULT: Starting Module pass manager run
 ; CHECK-AA-DEFAULT: Running pass: RequireAnalysisPass
 ; CHECK-AA-DEFAULT: Running analysis: AAManager
 ; CHECK-AA-DEFAULT: Running analysis: BasicAA
 ; CHECK-AA-DEFAULT: Running analysis: ScopedNoAliasAA
 ; CHECK-AA-DEFAULT: Running analysis: TypeBasedAA
-; CHECK-AA-DEFAULT: Finished llvm::Module pass manager run
+; CHECK-AA-DEFAULT: Finished Module pass manager run
 
 ; RUN: opt -disable-output -disable-verify -debug-pass-manager %s 2>&1 \
 ; RUN:     -passes='require<aa>,invalidate<domtree>,aa-eval' -aa-pipeline='basic-aa' \
@@ -324,7 +324,7 @@
 ; RUN: opt -disable-output -disable-verify -debug-pass-manager %s 2>&1 \
 ; RUN:     -passes='require<globals-aa>,function(require<aa>),invalidate<globals-aa>,require<globals-aa>,function(aa-eval)' -aa-pipeline='globals-aa' \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-AA-MODULE-INVALIDATE
-; CHECK-AA-MODULE-INVALIDATE: Starting llvm::Module pass manager run
+; CHECK-AA-MODULE-INVALIDATE: Starting Module pass manager run
 ; CHECK-AA-MODULE-INVALIDATE: Running pass: RequireAnalysisPass
 ; CHECK-AA-MODULE-INVALIDATE: Running analysis: GlobalsAA
 ; CHECK-AA-MODULE-INVALIDATE: Starting llvm::Function pass manager run
@@ -338,28 +338,28 @@
 ; CHECK-AA-MODULE-INVALIDATE: Starting llvm::Function pass manager run
 ; CHECK-AA-MODULE-INVALIDATE: Running pass: AAEvaluator
 ; CHECK-AA-MODULE-INVALIDATE: Finished llvm::Function pass manager run
-; CHECK-AA-MODULE-INVALIDATE: Finished llvm::Module pass manager run
+; CHECK-AA-MODULE-INVALIDATE: Finished Module pass manager run
 
 ; RUN: opt -disable-output -disable-verify -debug-pass-manager %s 2>&1 \
 ; RUN:     -passes='require<memdep>' \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-MEMDEP
-; CHECK-MEMDEP: Starting llvm::Module pass manager run
+; CHECK-MEMDEP: Starting Module pass manager run
 ; CHECK-MEMDEP: Running pass: RequireAnalysisPass
 ; CHECK-MEMDEP: Running analysis: MemoryDependenceAnalysis
-; CHECK-MEMDEP: Finished llvm::Module pass manager run
+; CHECK-MEMDEP: Finished Module pass manager run
 
 ; RUN: opt -disable-output -disable-verify -debug-pass-manager %s 2>&1 \
 ; RUN:     -passes='require<callgraph>' \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-CALLGRAPH
-; CHECK-CALLGRAPH: Starting llvm::Module pass manager run
+; CHECK-CALLGRAPH: Starting Module pass manager run
 ; CHECK-CALLGRAPH: Running pass: RequireAnalysisPass
 ; CHECK-CALLGRAPH: Running analysis: CallGraphAnalysis
-; CHECK-CALLGRAPH: Finished llvm::Module pass manager run
+; CHECK-CALLGRAPH: Finished Module pass manager run
 
 ; RUN: opt -disable-output -disable-verify -debug-pass-manager \
 ; RUN:     -passes='default<O0>' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-O0 --check-prefix=%llvmcheckext
-; CHECK-O0: Starting llvm::Module pass manager run
+; CHECK-O0: Starting Module pass manager run
 ; CHECK-O0-NEXT: Running pass: AlwaysInlinerPass
 ; CHECK-O0-NEXT: Running analysis: InnerAnalysisManagerProxy<{{.*}}>
 ; CHECK-O0-NEXT: Running analysis: ProfileSummaryAnalysis
@@ -369,28 +369,28 @@
 ; We don't have checks for CHECK-NOEXT here, but this simplifies the test, while
 ; avoiding FileCheck complaining about the unused prefix.
 ; CHECK-NOEXT: {{.*}}
-; CHECK-O0-NEXT: Finished llvm::Module pass manager run
+; CHECK-O0-NEXT: Finished Module pass manager run
 
 ; RUN: opt -disable-output -disable-verify -debug-pass-manager \
 ; RUN:     -passes='repeat<3>(no-op-module)' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-REPEAT-MODULE-PASS
-; CHECK-REPEAT-MODULE-PASS: Starting llvm::Module pass manager run
+; CHECK-REPEAT-MODULE-PASS: Starting Module pass manager run
 ; CHECK-REPEAT-MODULE-PASS-NEXT: Running pass: RepeatedPass
-; CHECK-REPEAT-MODULE-PASS-NEXT: Starting llvm::Module pass manager run
+; CHECK-REPEAT-MODULE-PASS-NEXT: Starting Module pass manager run
 ; CHECK-REPEAT-MODULE-PASS-NEXT: Running pass: NoOpModulePass
-; CHECK-REPEAT-MODULE-PASS-NEXT: Finished llvm::Module pass manager run
-; CHECK-REPEAT-MODULE-PASS-NEXT: Starting llvm::Module pass manager run
+; CHECK-REPEAT-MODULE-PASS-NEXT: Finished Module pass manager run
+; CHECK-REPEAT-MODULE-PASS-NEXT: Starting Module pass manager run
 ; CHECK-REPEAT-MODULE-PASS-NEXT: Running pass: NoOpModulePass
-; CHECK-REPEAT-MODULE-PASS-NEXT: Finished llvm::Module pass manager run
-; CHECK-REPEAT-MODULE-PASS-NEXT: Starting llvm::Module pass manager run
+; CHECK-REPEAT-MODULE-PASS-NEXT: Finished Module pass manager run
+; CHECK-REPEAT-MODULE-PASS-NEXT: Starting Module pass manager run
 ; CHECK-REPEAT-MODULE-PASS-NEXT: Running pass: NoOpModulePass
-; CHECK-REPEAT-MODULE-PASS-NEXT: Finished llvm::Module pass manager run
-; CHECK-REPEAT-MODULE-PASS-NEXT: Finished llvm::Module pass manager run
+; CHECK-REPEAT-MODULE-PASS-NEXT: Finished Module pass manager run
+; CHECK-REPEAT-MODULE-PASS-NEXT: Finished Module pass manager run
 
 ; RUN: opt -disable-output -disable-verify -debug-pass-manager \
 ; RUN:     -passes='cgscc(repeat<3>(no-op-cgscc))' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-REPEAT-CGSCC-PASS
-; CHECK-REPEAT-CGSCC-PASS: Starting llvm::Module pass manager run
+; CHECK-REPEAT-CGSCC-PASS: Starting Module pass manager run
 ; CHECK-REPEAT-CGSCC-PASS-NEXT: Running analysis: InnerAnalysisManagerProxy<{{.*(CGSCCAnalysisManager|AnalysisManager<.*LazyCallGraph::SCC.*>).*}},{{.*}}Module>
 ; CHECK-REPEAT-CGSCC-PASS-NEXT: Running analysis: InnerAnalysisManagerProxy<{{.*(FunctionAnalysisManager|AnalysisManager<.*Function.*>).*}},{{.*}}Module>
 ; CHECK-REPEAT-CGSCC-PASS-NEXT: Running analysis: LazyCallGraphAnalysis
@@ -409,12 +409,12 @@
 ; CHECK-REPEAT-CGSCC-PASS-NEXT: Running pass: NoOpCGSCCPass
 ; CHECK-REPEAT-CGSCC-PASS-NEXT: Finished CGSCC pass manager run
 ; CHECK-REPEAT-CGSCC-PASS-NEXT: Finished CGSCC pass manager run
-; CHECK-REPEAT-CGSCC-PASS-NEXT: Finished llvm::Module pass manager run
+; CHECK-REPEAT-CGSCC-PASS-NEXT: Finished Module pass manager run
 
 ; RUN: opt -disable-output -disable-verify -debug-pass-manager \
 ; RUN:     -passes='function(repeat<3>(no-op-function))' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-REPEAT-FUNCTION-PASS
-; CHECK-REPEAT-FUNCTION-PASS: Starting llvm::Module pass manager run
+; CHECK-REPEAT-FUNCTION-PASS: Starting Module pass manager run
 ; CHECK-REPEAT-FUNCTION-PASS-NEXT: Running analysis: InnerAnalysisManagerProxy<{{.*}}>
 ; CHECK-REPEAT-FUNCTION-PASS-NEXT: Starting llvm::Function pass manager run
 ; CHECK-REPEAT-FUNCTION-PASS-NEXT: Running pass: RepeatedPass
@@ -428,12 +428,12 @@
 ; CHECK-REPEAT-FUNCTION-PASS-NEXT: Running pass: NoOpFunctionPass
 ; CHECK-REPEAT-FUNCTION-PASS-NEXT: Finished llvm::Function pass manager run
 ; CHECK-REPEAT-FUNCTION-PASS-NEXT: Finished llvm::Function pass manager run
-; CHECK-REPEAT-FUNCTION-PASS-NEXT: Finished llvm::Module pass manager run
+; CHECK-REPEAT-FUNCTION-PASS-NEXT: Finished Module pass manager run
 
 ; RUN: opt -disable-output -disable-verify -debug-pass-manager \
 ; RUN:     -passes='loop(repeat<3>(no-op-loop))' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-REPEAT-LOOP-PASS
-; CHECK-REPEAT-LOOP-PASS: Starting llvm::Module pass manager run
+; CHECK-REPEAT-LOOP-PASS: Starting Module pass manager run
 ; CHECK-REPEAT-LOOP-PASS-NEXT: Running analysis: InnerAnalysisManagerProxy<{{.*}}>
 ; CHECK-REPEAT-LOOP-PASS-NEXT: Starting llvm::Function pass manager run
 ; CHECK-REPEAT-LOOP-PASS-NEXT: Starting llvm::Function pass manager run
@@ -465,7 +465,7 @@
 ; CHECK-REPEAT-LOOP-PASS-NEXT: Finished Loop pass manager run
 ; CHECK-REPEAT-LOOP-PASS-NEXT: Finished Loop pass manager run
 ; CHECK-REPEAT-LOOP-PASS-NEXT: Finished llvm::Function pass manager run
-; CHECK-REPEAT-LOOP-PASS-NEXT: Finished llvm::Module pass manager run
+; CHECK-REPEAT-LOOP-PASS-NEXT: Finished Module pass manager run
 
 define void @foo(i1 %x, i8* %p1, i8* %p2) {
 entry:
diff -up llvm-12.0.1.src/test/Other/new-pm-O0-defaults.ll~ llvm-12.0.1.src/test/Other/new-pm-O0-defaults.ll
--- a/llvm-12.0.1.src/test/Other/new-pm-O0-defaults.ll~	2021-06-29 00:23:38.000000000 +0800
+++ b/llvm-12.0.1.src/test/Other/new-pm-O0-defaults.ll	2023-02-01 00:21:56.097327027 +0800
@@ -26,7 +26,7 @@
 ; RUN:     -passes='lto<O0>' -S %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefixes=CHECK,CHECK-LTO
 
-; CHECK: Starting llvm::Module pass manager run.
+; CHECK: Starting Module pass manager run.
 ; CHECK-DEFAULT-NEXT: Running pass: AlwaysInlinerPass
 ; CHECK-DEFAULT-NEXT: Running analysis: InnerAnalysisManagerProxy
 ; CHECK-DEFAULT-NEXT: Running analysis: ProfileSummaryAnalysis
@@ -57,7 +57,7 @@
 ; CHECK-NEXT:   ret void
 ; CHECK-NEXT: }
 ;
-; CHECK-NEXT: Finished llvm::Module pass manager run.
+; CHECK-NEXT: Finished Module pass manager run.
 
 declare void @bar() local_unnamed_addr
 
diff -up llvm-12.0.1.src/test/Other/new-pm-defaults.ll~ llvm-12.0.1.src/test/Other/new-pm-defaults.ll
--- a/llvm-12.0.1.src/test/Other/new-pm-defaults.ll~	2021-06-29 00:23:38.000000000 +0800
+++ b/llvm-12.0.1.src/test/Other/new-pm-defaults.ll	2023-02-01 00:22:14.230442218 +0800
@@ -70,7 +70,7 @@
 ; Suppress FileCheck --allow-unused-prefixes=false diagnostics.
 ; CHECK-Oz: {{^}}
 
-; CHECK-O: Starting llvm::Module pass manager run.
+; CHECK-O: Starting Module pass manager run.
 ; CHECK-O-NEXT: Running pass: Annotation2Metadata
 ; CHECK-O-NEXT: Running pass: ForceFunctionAttrsPass
 ; CHECK-EP-PIPELINE-START-NEXT: Running pass: NoOpModulePass
@@ -107,15 +107,15 @@
 ; CHECK-O-NEXT: Finished llvm::Function pass manager run.
 ; CHECK-O-NEXT: Running pass: ModuleInlinerWrapperPass
 ; CHECK-O-NEXT: Running analysis: InlineAdvisorAnalysis
-; CHECK-O-NEXT: Starting llvm::Module pass manager run.
+; CHECK-O-NEXT: Starting Module pass manager run.
 ; CHECK-O-NEXT: Running pass: RequireAnalysisPass<{{.*}}GlobalsAA
 ; CHECK-O-NEXT: Running analysis: GlobalsAA
 ; CHECK-O-NEXT: Running analysis: CallGraphAnalysis
 ; CHECK-O-NEXT: Running pass: RequireAnalysisPass<{{.*}}ProfileSummaryAnalysis
 ; CHECK-O-NEXT: Running analysis: ProfileSummaryAnalysis
-; CHECK-O-NEXT: Running analysis: InnerAnalysisManagerProxy	
-; CHECK-O-NEXT: Running analysis: LazyCallGraphAnalysis	
-; CHECK-O-NEXT: Running analysis: FunctionAnalysisManagerCGSCCProxy	
+; CHECK-O-NEXT: Running analysis: InnerAnalysisManagerProxy
+; CHECK-O-NEXT: Running analysis: LazyCallGraphAnalysis
+; CHECK-O-NEXT: Running analysis: FunctionAnalysisManagerCGSCCProxy
 ; CHECK-O-NEXT: Running analysis: OuterAnalysisManagerProxy<{{.*}}LazyCallGraph::SCC{{.*}}>
 ; CHECK-O-NEXT: Running pass: DevirtSCCRepeatedPass
 ; CHECK-O-NEXT: Starting CGSCC pass manager run.
@@ -205,7 +205,7 @@
 ; CHECK-EP-PEEPHOLE-NEXT: Running pass: NoOpFunctionPass
 ; CHECK-O-NEXT: Finished llvm::Function pass manager run.
 ; CHECK-O-NEXT: Finished CGSCC pass manager run.
-; CHECK-O-NEXT: Finished llvm::Module pass manager run.
+; CHECK-O-NEXT: Finished Module pass manager run.
 ; CHECK-O-NEXT: Running pass: GlobalOptPass
 ; CHECK-O-NEXT: Running pass: GlobalDCEPass
 ; CHECK-DEFAULT-NEXT: Running pass: EliminateAvailableExternallyPass
@@ -276,7 +276,7 @@
 ; CHECK-O-NEXT:   ret void
 ; CHECK-O-NEXT: }
 ;
-; CHECK-O-NEXT: Finished llvm::Module pass manager run.
+; CHECK-O-NEXT: Finished Module pass manager run.
 
 declare void @bar() local_unnamed_addr
 
diff -up llvm-12.0.1.src/test/Other/new-pm-lto-defaults.ll~ llvm-12.0.1.src/test/Other/new-pm-lto-defaults.ll
--- a/llvm-12.0.1.src/test/Other/new-pm-lto-defaults.ll~	2021-06-29 00:23:38.000000000 +0800
+++ b/llvm-12.0.1.src/test/Other/new-pm-lto-defaults.ll	2023-02-01 00:22:26.708521486 +0800
@@ -23,7 +23,7 @@
 ; RUN:     | FileCheck %s --check-prefix=CHECK-O --check-prefix=CHECK-O2 \
 ; RUN:     --check-prefix=CHECK-O3 --check-prefix=CHECK-EP-Peephole
 
-; CHECK-O: Starting llvm::Module pass manager run.
+; CHECK-O: Starting Module pass manager run.
 ; CHECK-O-NEXT: Running pass: Annotation2Metadata
 ; CHECK-O-NEXT: Running pass: GlobalDCEPass
 ; CHECK-O-NEXT: Running pass: ForceFunctionAttrsPass
@@ -71,12 +71,12 @@
 ; CHECK-O2-NEXT: Finished llvm::Function pass manager run.
 ; CHECK-O2-NEXT: Running pass: ModuleInlinerWrapperPass
 ; CHECK-O2-NEXT: Running analysis: InlineAdvisorAnalysis
-; CHECK-O2-NEXT: Starting llvm::Module pass manager run.
+; CHECK-O2-NEXT: Starting Module pass manager run.
 ; CHECK-O2-NEXT: Starting CGSCC pass manager run.
 ; CHECK-O2-NEXT: Running pass: InlinerPass
 ; CHECK-O2-NEXT: Running pass: InlinerPass
 ; CHECK-O2-NEXT: Finished CGSCC pass manager run.
-; CHECK-O2-NEXT: Finished llvm::Module pass manager run.
+; CHECK-O2-NEXT: Finished Module pass manager run.
 ; CHECK-O2-NEXT: Running pass: GlobalOptPass
 ; CHECK-O2-NEXT: Running pass: GlobalDCEPass
 ; CHECK-O2-NEXT: Starting llvm::Function pass manager run.
@@ -127,7 +127,7 @@
 ; CHECK-O-NEXT:   ret void
 ; CHECK-O-NEXT: }
 ;
-; CHECK-O-NEXT: Finished llvm::Module pass manager run.
+; CHECK-O-NEXT: Finished Module pass manager run.
 
 declare void @bar() local_unnamed_addr
 
diff -up llvm-12.0.1.src/test/Other/new-pm-thinlto-defaults.ll~ llvm-12.0.1.src/test/Other/new-pm-thinlto-defaults.ll
--- a/llvm-12.0.1.src/test/Other/new-pm-thinlto-defaults.ll~	2021-06-29 00:23:38.000000000 +0800
+++ b/llvm-12.0.1.src/test/Other/new-pm-thinlto-defaults.ll	2023-02-01 00:23:05.001764739 +0800
@@ -50,7 +50,7 @@
 ; Suppress FileCheck --allow-unused-prefixes=false diagnostics.
 ; CHECK-NOEXT: {{^}}
 
-; CHECK-O: Starting llvm::Module pass manager run.
+; CHECK-O: Starting Module pass manager run.
 ; CHECK-O-NEXT: Running pass: Annotation2Metadata
 ; CHECK-O-NEXT: Running pass: ForceFunctionAttrsPass
 ; CHECK-EP-PIPELINE-START-NEXT: Running pass: NoOpModulePass
@@ -92,15 +92,15 @@
 ; CHECK-O-NEXT: Finished llvm::Function pass manager run.
 ; CHECK-O-NEXT: Running pass: ModuleInlinerWrapperPass
 ; CHECK-O-NEXT: Running analysis: InlineAdvisorAnalysis
-; CHECK-O-NEXT: Starting llvm::Module pass manager run.
+; CHECK-O-NEXT: Starting Module pass manager run.
 ; CHECK-O-NEXT: Running pass: RequireAnalysisPass<{{.*}}GlobalsAA
 ; CHECK-O-NEXT: Running analysis: GlobalsAA
 ; CHECK-O-NEXT: Running analysis: CallGraphAnalysis
 ; CHECK-O-NEXT: Running pass: RequireAnalysisPass<{{.*}}ProfileSummaryAnalysis
 ; CHECK-PRELINK-O-NEXT: Running analysis: ProfileSummaryAnalysis
-; CHECK-O-NEXT: Running analysis: InnerAnalysisManagerProxy	
-; CHECK-O-NEXT: Running analysis: LazyCallGraphAnalysis	
-; CHECK-O-NEXT: Running analysis: FunctionAnalysisManagerCGSCCProxy	
+; CHECK-O-NEXT: Running analysis: InnerAnalysisManagerProxy
+; CHECK-O-NEXT: Running analysis: LazyCallGraphAnalysis
+; CHECK-O-NEXT: Running analysis: FunctionAnalysisManagerCGSCCProxy
 ; CHECK-O-NEXT: Running analysis: OuterAnalysisManagerProxy
 ; CHECK-O-NEXT: Running pass: DevirtSCCRepeatedPass
 ; CHECK-O-NEXT: Starting CGSCC pass manager run.
@@ -195,7 +195,7 @@
 ; CHECK-O-NEXT: Running pass: InstCombinePass
 ; CHECK-O-NEXT: Finished llvm::Function pass manager run.
 ; CHECK-O-NEXT: Finished CGSCC pass manager run.
-; CHECK-O-NEXT: Finished llvm::Module pass manager run.
+; CHECK-O-NEXT: Finished Module pass manager run.
 ; CHECK-PRELINK-O-NEXT: Running pass: GlobalOptPass
 ; CHECK-POSTLINK-O-NEXT: Running pass: GlobalOptPass
 ; CHECK-POSTLINK-O-NEXT: Running pass: GlobalDCEPass
@@ -263,7 +263,7 @@
 ; CHECK-O-NEXT:   ret void
 ; CHECK-O-NEXT: }
 ;
-; CHECK-O-NEXT: Finished llvm::Module pass manager run.
+; CHECK-O-NEXT: Finished Module pass manager run.
 
 declare void @bar() local_unnamed_addr
 
diff -up llvm-12.0.1.src/test/Other/pass-pipeline-parsing.ll~ llvm-12.0.1.src/test/Other/pass-pipeline-parsing.ll
--- a/llvm-12.0.1.src/test/Other/pass-pipeline-parsing.ll~	2021-06-29 00:23:38.000000000 +0800
+++ b/llvm-12.0.1.src/test/Other/pass-pipeline-parsing.ll	2023-02-01 00:23:18.577850983 +0800
@@ -1,50 +1,50 @@
 ; RUN: opt -disable-output -debug-pass-manager \
 ; RUN:     -passes=no-op-module,no-op-module %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-TWO-NOOP-MP
-; CHECK-TWO-NOOP-MP: Starting llvm::Module pass manager run
+; CHECK-TWO-NOOP-MP: Starting Module pass manager run
 ; CHECK-TWO-NOOP-MP: Running pass: NoOpModulePass
 ; CHECK-TWO-NOOP-MP: Running pass: NoOpModulePass
-; CHECK-TWO-NOOP-MP: Finished llvm::Module pass manager run
+; CHECK-TWO-NOOP-MP: Finished Module pass manager run
 
 ; RUN: opt -disable-output -debug-pass-manager \
 ; RUN:     -passes='module(no-op-module,no-op-module)' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-NESTED-TWO-NOOP-MP
-; CHECK-NESTED-TWO-NOOP-MP: Starting llvm::Module pass manager run
+; CHECK-NESTED-TWO-NOOP-MP: Starting Module pass manager run
 ; CHECK-NESTED-TWO-NOOP-MP: Running pass: NoOpModulePass
 ; CHECK-NESTED-TWO-NOOP-MP: Running pass: NoOpModulePass
-; CHECK-NESTED-TWO-NOOP-MP: Finished llvm::Module pass manager run
+; CHECK-NESTED-TWO-NOOP-MP: Finished Module pass manager run
 
 ; RUN: opt -disable-output -debug-pass-manager \
 ; RUN:     -passes=no-op-function,no-op-function %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-TWO-NOOP-FP
-; CHECK-TWO-NOOP-FP: Starting llvm::Module pass manager run
+; CHECK-TWO-NOOP-FP: Starting Module pass manager run
 ; CHECK-TWO-NOOP-FP: Starting llvm::Function pass manager run
 ; CHECK-TWO-NOOP-FP: Running pass: NoOpFunctionPass
 ; CHECK-TWO-NOOP-FP: Running pass: NoOpFunctionPass
 ; CHECK-TWO-NOOP-FP: Finished llvm::Function pass manager run
-; CHECK-TWO-NOOP-FP: Finished llvm::Module pass manager run
+; CHECK-TWO-NOOP-FP: Finished Module pass manager run
 
 ; RUN: opt -disable-output -debug-pass-manager \
 ; RUN:     -passes='function(no-op-function,no-op-function)' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-NESTED-TWO-NOOP-FP
-; CHECK-NESTED-TWO-NOOP-FP: Starting llvm::Module pass manager run
+; CHECK-NESTED-TWO-NOOP-FP: Starting Module pass manager run
 ; CHECK-NESTED-TWO-NOOP-FP: Starting llvm::Function pass manager run
 ; CHECK-NESTED-TWO-NOOP-FP: Running pass: NoOpFunctionPass
 ; CHECK-NESTED-TWO-NOOP-FP: Running pass: NoOpFunctionPass
 ; CHECK-NESTED-TWO-NOOP-FP: Finished llvm::Function pass manager run
-; CHECK-NESTED-TWO-NOOP-FP: Finished llvm::Module pass manager run
+; CHECK-NESTED-TWO-NOOP-FP: Finished Module pass manager run
 
 ; RUN: opt -disable-output -debug-pass-manager \
 ; RUN:     -passes='no-op-module,function(no-op-function,no-op-function),no-op-module' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-MIXED-FP-AND-MP
-; CHECK-MIXED-FP-AND-MP: Starting llvm::Module pass manager run
+; CHECK-MIXED-FP-AND-MP: Starting Module pass manager run
 ; CHECK-MIXED-FP-AND-MP: Running pass: NoOpModulePass
 ; CHECK-MIXED-FP-AND-MP: Starting llvm::Function pass manager run
 ; CHECK-MIXED-FP-AND-MP: Running pass: NoOpFunctionPass
 ; CHECK-MIXED-FP-AND-MP: Running pass: NoOpFunctionPass
 ; CHECK-MIXED-FP-AND-MP: Finished llvm::Function pass manager run
 ; CHECK-MIXED-FP-AND-MP: Running pass: NoOpModulePass
-; CHECK-MIXED-FP-AND-MP: Finished llvm::Module pass manager run
+; CHECK-MIXED-FP-AND-MP: Finished Module pass manager run
 
 ; RUN: opt -disable-output -debug-pass-manager \
 ; RUN:     -aa-pipeline= -passes='require<aa>' %s 2>&1 \
@@ -126,17 +126,17 @@
 ; RUN: opt -disable-output -debug-pass-manager \
 ; RUN:     -passes=no-op-cgscc,no-op-cgscc %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-TWO-NOOP-CG
-; CHECK-TWO-NOOP-CG: Starting llvm::Module pass manager run
+; CHECK-TWO-NOOP-CG: Starting Module pass manager run
 ; CHECK-TWO-NOOP-CG: Starting CGSCC pass manager run
 ; CHECK-TWO-NOOP-CG: Running pass: NoOpCGSCCPass
 ; CHECK-TWO-NOOP-CG: Running pass: NoOpCGSCCPass
 ; CHECK-TWO-NOOP-CG: Finished CGSCC pass manager run
-; CHECK-TWO-NOOP-CG: Finished llvm::Module pass manager run
+; CHECK-TWO-NOOP-CG: Finished Module pass manager run
 
 ; RUN: opt -disable-output -debug-pass-manager \
 ; RUN:     -passes='module(function(no-op-function),cgscc(no-op-cgscc,function(no-op-function),no-op-cgscc),function(no-op-function))' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-NESTED-MP-CG-FP
-; CHECK-NESTED-MP-CG-FP: Starting llvm::Module pass manager run
+; CHECK-NESTED-MP-CG-FP: Starting Module pass manager run
 ; CHECK-NESTED-MP-CG-FP: Starting llvm::Function pass manager run
 ; CHECK-NESTED-MP-CG-FP: Running pass: NoOpFunctionPass
 ; CHECK-NESTED-MP-CG-FP: Finished llvm::Function pass manager run
@@ -150,19 +150,19 @@
 ; CHECK-NESTED-MP-CG-FP: Starting llvm::Function pass manager run
 ; CHECK-NESTED-MP-CG-FP: Running pass: NoOpFunctionPass
 ; CHECK-NESTED-MP-CG-FP: Finished llvm::Function pass manager run
-; CHECK-NESTED-MP-CG-FP: Finished llvm::Module pass manager run
+; CHECK-NESTED-MP-CG-FP: Finished Module pass manager run
 
 ; RUN: opt -disable-output -debug-pass-manager \
 ; RUN:     -passes='no-op-loop,no-op-loop' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-TWO-NOOP-LOOP
-; CHECK-TWO-NOOP-LOOP: Starting llvm::Module pass manager run
+; CHECK-TWO-NOOP-LOOP: Starting Module pass manager run
 ; CHECK-TWO-NOOP-LOOP: Starting llvm::Function pass manager run
 ; CHECK-TWO-NOOP-LOOP: Starting Loop pass manager run
 ; CHECK-TWO-NOOP-LOOP: Running pass: NoOpLoopPass
 ; CHECK-TWO-NOOP-LOOP: Running pass: NoOpLoopPass
 ; CHECK-TWO-NOOP-LOOP: Finished Loop pass manager run
 ; CHECK-TWO-NOOP-LOOP: Finished llvm::Function pass manager run
-; CHECK-TWO-NOOP-LOOP: Finished llvm::Module pass manager run
+; CHECK-TWO-NOOP-LOOP: Finished Module pass manager run
 
 ; RUN: opt -disable-output -debug-pass-manager \
 ; RUN:     -passes='module(function(loop(no-op-loop)))' %s 2>&1 \
@@ -176,18 +176,18 @@
 ; RUN: opt -disable-output -debug-pass-manager \
 ; RUN:     -passes='no-op-loop' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-NESTED-FP-LP
-; CHECK-NESTED-FP-LP: Starting llvm::Module pass manager run
+; CHECK-NESTED-FP-LP: Starting Module pass manager run
 ; CHECK-NESTED-FP-LP: Starting llvm::Function pass manager run
 ; CHECK-NESTED-FP-LP: Starting Loop pass manager run
 ; CHECK-NESTED-FP-LP: Running pass: NoOpLoopPass
 ; CHECK-NESTED-FP-LP: Finished Loop pass manager run
 ; CHECK-NESTED-FP-LP: Finished llvm::Function pass manager run
-; CHECK-NESTED-FP-LP: Finished llvm::Module pass manager run
+; CHECK-NESTED-FP-LP: Finished Module pass manager run
 
 ; RUN: opt -disable-output -debug-pass-manager -debug-pass-manager-verbose \
 ; RUN:     -passes='module(no-op-function,no-op-loop,no-op-cgscc,cgscc(no-op-function,no-op-loop),function(no-op-loop))' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-ADAPTORS
-; CHECK-ADAPTORS: Starting llvm::Module pass manager run
+; CHECK-ADAPTORS: Starting Module pass manager run
 ; CHECK-ADAPTORS: Running pass: ModuleToFunctionPassAdaptor
 ; CHECK-ADAPTORS: Running pass: NoOpFunctionPass
 ; CHECK-ADAPTORS: Running pass: ModuleToFunctionPassAdaptor
@@ -208,17 +208,17 @@
 ; CHECK-ADAPTORS: Running pass: FunctionToLoopPassAdaptor
 ; CHECK-ADAPTORS: Running pass: NoOpLoopPass on Loop at depth 1 containing: %loop
 ; CHECK-ADAPTORS: Finished llvm::Function pass manager run
-; CHECK-ADAPTORS: Finished llvm::Module pass manager run
+; CHECK-ADAPTORS: Finished Module pass manager run
 
 ; RUN: opt -disable-output -debug-pass-manager \
 ; RUN:     -passes='cgscc(print)' %s 2>&1 \
 ; RUN:     | FileCheck %s --check-prefix=CHECK-PRINT-IN-CGSCC
-; CHECK-PRINT-IN-CGSCC: Starting llvm::Module pass manager run
+; CHECK-PRINT-IN-CGSCC: Starting Module pass manager run
 ; CHECK-PRINT-IN-CGSCC: Starting CGSCC pass manager run
 ; CHECK-PRINT-IN-CGSCC: Running pass: PrintFunctionPass
 ; CHECK-PRINT-IN-CGSCC: Finished CGSCC pass manager run
 ; CHECK-PRINT-IN-CGSCC: Running pass: VerifierPass
-; CHECK-PRINT-IN-CGSCC: Finished llvm::Module pass manager run
+; CHECK-PRINT-IN-CGSCC: Finished Module pass manager run
 
 ; RUN: not opt -disable-output -debug-pass-manager \
 ; RUN:     -passes='function(no-op-function)function(no-op-function)' %s 2>&1 \
diff -up llvm-12.0.1.src/test/Transforms/Inline/cgscc-incremental-invalidate.ll~ llvm-12.0.1.src/test/Transforms/Inline/cgscc-incremental-invalidate.ll
--- a/llvm-12.0.1.src/test/Transforms/Inline/cgscc-incremental-invalidate.ll~	2021-06-29 00:23:38.000000000 +0800
+++ b/llvm-12.0.1.src/test/Transforms/Inline/cgscc-incremental-invalidate.ll	2023-02-01 00:23:32.139937142 +0800
@@ -6,7 +6,7 @@
 ; First we check that the passes run in the way we expect. Otherwise this test
 ; may stop testing anything.
 ;
-; CHECK-LABEL: Starting llvm::Module pass manager run.
+; CHECK-LABEL: Starting Module pass manager run.
 ; CHECK: Running pass: InlinerPass on (test1_f, test1_g, test1_h)
 ; CHECK: Running analysis: DominatorTreeAnalysis on test1_f
 ; CHECK: Running analysis: DominatorTreeAnalysis on test1_g
diff -up llvm-12.0.1.src/test/Transforms/Inline/clear-analyses.ll~ llvm-12.0.1.src/test/Transforms/Inline/clear-analyses.ll
--- a/llvm-12.0.1.src/test/Transforms/Inline/clear-analyses.ll~	2021-06-29 00:23:38.000000000 +0800
+++ b/llvm-12.0.1.src/test/Transforms/Inline/clear-analyses.ll	2023-02-01 00:23:37.442970831 +0800
@@ -7,7 +7,7 @@
 ; RUN:     -passes='cgscc(inline,function(correlated-propagation))' \
 ; RUN:     | FileCheck %s
 ;
-; CHECK-LABEL: Starting llvm::Module pass manager run.
+; CHECK-LABEL: Starting Module pass manager run.
 ; CHECK: Running pass: InlinerPass on (callee)
 ; CHECK: Running pass: CorrelatedValuePropagationPass on callee
 ; CHECK: Running analysis: LazyValueAnalysis
diff -up llvm-12.0.1.src/test/Transforms/SCCP/ipsccp-preserve-analysis.ll~ llvm-12.0.1.src/test/Transforms/SCCP/ipsccp-preserve-analysis.ll
--- a/llvm-12.0.1.src/test/Transforms/SCCP/ipsccp-preserve-analysis.ll~	2021-06-29 00:23:38.000000000 +0800
+++ b/llvm-12.0.1.src/test/Transforms/SCCP/ipsccp-preserve-analysis.ll	2023-02-01 00:23:42.613003676 +0800
@@ -8,7 +8,7 @@
 
 ; RUN: opt -passes='function(require<postdomtree>),ipsccp,function(verify<domtree>)' -S  %s | FileCheck -check-prefixes='IR' %s
 
-; NEW-PM: Starting llvm::Module pass manager run.
+; NEW-PM: Starting Module pass manager run.
 ; NEW-PM: Running analysis: DominatorTreeAnalysis on f1
 ; NEW-PM: Running analysis: PostDominatorTreeAnalysis on f1
 ; NEW-PM: Running analysis: DominatorTreeAnalysis on f2
diff -up llvm-12.0.1.src/test/tools/gold/X86/new-pm.ll~ llvm-12.0.1.src/test/tools/gold/X86/new-pm.ll
--- a/llvm-12.0.1.src/test/tools/gold/X86/new-pm.ll~	2021-06-29 00:23:38.000000000 +0800
+++ b/llvm-12.0.1.src/test/tools/gold/X86/new-pm.ll	2023-02-01 00:23:47.508034774 +0800
@@ -8,7 +8,7 @@
 ; RUN:     --plugin-opt=cache-dir=%t.cache \
 ; RUN:     -o %t2.o %t.o 2>&1 | FileCheck %s
 
-; CHECK: Starting llvm::Module pass manager run
+; CHECK: Starting Module pass manager run
 
 ;; --plugin-opt=debug-pass-manager is a no-op for the legacy pass manager.
 ; RUN: %gold -m elf_x86_64 -plugin %llvmshlibdir/LLVMgold%shlibext \
